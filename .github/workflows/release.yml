name: Release

on:
  push:
    tags:        
      - 'v**'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - run: gh release create ${{ github.ref_name }}
        continue-on-error: true
        env:
          GH_TOKEN: ${{ github.token }}
  upload-binaries-to-release:
    name: Upload
    strategy:
      max-parallel: 3
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        toolchain:
          - stable
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}

      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}

      - run: cargo build --verbose --release

      - name: Upload binary to release
        continue-on-error: true
        run: >
          mv $file $name &&
          gh release upload ${{ github.ref_name }} $name
        shell:
          bash
        env:
          GH_TOKEN: ${{ github.token }}
          name: ${{ runner.os }}-rrdb${{ runner.os == 'Windows' && '.exe' || ''}}
          file: target/release/rrdb${{ runner.os == 'Windows' && '.exe' || ''}}
